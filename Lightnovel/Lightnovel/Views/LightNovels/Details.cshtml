@model Lightnovel.Models.Response

@{
    ViewData["Title"] = "Details";
}

<h1 class="titleofpage">Details</h1>

<a asp-action="Index" class="btn btn-primary">Back to List</a>

<div class="statusCode">
    @if (Model.statusCode == 200)
    {
        <p id="okay">
            Status: @Html.DisplayFor(model => model.statusCode)
        </p>
    }
    else
    {
        <p id="notokay">
            Status: @Html.DisplayFor(model => model.statusCode)
        </p>
    }
</div>
<div class="statusDescript">
    <p>
        @Html.DisplayFor(model => model.statusDescription)
    </p>
</div>

@foreach(var element in Model.novels)
    {
        <div>
            <h4>@Html.DisplayFor(model => element.Title)</h4>
            <hr />
            <dl class="row">
                <dt class = "col-sm-4">
                    @Html.DisplayNameFor(model => element.Title)
                </dt>
                <dd class = "col-sm-8">
                    @Html.DisplayFor(model => element.Title)
                </dd>
                <dt class = "col-sm-4">
                    Original Language
                </dt>
                <dd class = "col-sm-8">
                    @Html.DisplayFor(model => element.OriginalLanguage)
                </dd>
                <dt class = "col-sm-4">
                    Description
                </dt>
                <dd class = "col-sm-8">
                    @Html.DisplayFor(model => element.Blurb)
                </dd>
                <dt class = "col-sm-4">
                    @Html.DisplayNameFor(model => element.Rating)
                </dt>
                <dd class = "col-sm-8">
                    @Html.DisplayFor(model => element.Rating)
                </dd>
                <dt class = "col-sm-4">
                    @Html.DisplayNameFor(model => element.Genre)
                </dt>
                <dd class = "col-sm-8">
                    @Html.DisplayFor(model => element.Genre)
                </dd>
                <dt class = "col-sm-4">
                    Translated Status
                </dt>
                <dd class = "col-sm-8">
                    @Html.DisplayFor(model => element.TranslatedStatus)
                </dd>
                <dt class = "col-sm-4">
                    @Html.DisplayNameFor(model => element.Link)
                </dt>
                <dd class = "col-sm-8">
                    @Html.DisplayFor(model => element.Link)
                </dd>
                <dt class = "col-sm-4">
                    @Html.DisplayNameFor(model => element.Creator.CreatorId)
                </dt>
                <dd class = "col-sm-8">
                    @Html.DisplayFor(model => element.Creator.CreatorId)
                </dd>
                <dt class="col-sm-4">
                    Author
                </dt>
                <dd class="col-sm-8">
                    @Html.DisplayFor(model => element.Creator.EnglishName) 
                    (@Html.DisplayFor(model => element.Creator.FullName) )
                </dd>
                <dt class = "col-sm-4">
                    @Html.DisplayNameFor(model => element.Comic.ComicId)
                </dt>
                <dd class = "col-sm-8">
                    @Html.DisplayFor(model => element.Comic.ComicId)
                </dd>
                <dt class="col-sm-4">
                    Comic Link
                </dt>
                <dd class="col-sm-8">
                    <p>
                        @if (element.Comic == null)
                        {
                            <span>
                                There is currently no comic for this novel;
                            </span>
                        }
                        else if (element.Comic.Link == "N/A") 
                        {
                            <span>
                                There is currently no comic link for this novel;
                            </span>
                        }
                        else
                        {
                            <a href="@Html.DisplayFor(modelItem => element.Comic.Link)">
                                Read
                            </a>
                        }
                    </p>
                </dd>
                <dt class = "col-sm-4">
                    @Html.DisplayNameFor(model => element.Raw.RawId)
                </dt>
                <dd class = "col-sm-8">
                    @Html.DisplayFor(model => element.Raw.RawId)
                </dd>
                <dt class="col-sm-4">
                    @Html.DisplayNameFor(model => element.Raw)
                </dt>
                <dd class="col-sm-8">
                    <p>
                        @if (element.Raw == null)
                        {
                            <span>
                                Currently no raw for this novel in our database.
                            </span>                 
                        }
                        else if (element.Raw.Link != null)
                        {
                            <a href="@Html.DisplayFor(modelItem => element.Raw.Link)">
                                Read
                            </a>
                        }
                    </p>
                </dd>
                <dt class = "col-sm-4">
                    Book Status
                </dt>
                <dd class="col-sm-8">
                    @Html.DisplayFor(model => element.Raw.BookStatus)
                </dd>
            </dl>
        </div>
        <div>
            <a asp-action="Edit" asp-route-id="@element?.NovelId" class="btn btn-primary">Edit</a>
            <a asp-action="Delete" asp-route-id="@element?.NovelId" class="btn btn-danger">Delete</a>
        </div>
    }
